<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_Send.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="bt_return.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>